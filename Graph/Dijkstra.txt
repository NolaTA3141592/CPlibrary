struct edge{
    int to,cost;
    edge(int a,int b):to(a),cost(b){}
};
vector<edge> G[1000];
vector<int> dist(1000,1e9);

void dijkstra(int s){
    priority_queue<P,vector<P>,greater<P>> que; //first=最短距離 ,second=頂点番号
    dist[s]=0;
    que.push(P(0,s));
    while(!que.empty()){
        P p=que.top();que.pop();
        int v=p.second;
        if(dist[v]<p.first)continue;
        rep(i,G[v].size()){
            edge e=G[v][i];
            if(dist[e.to]>dist[v]+e.cost){
                dist[e.to]=dist[v]+e.cost;
                que.push(P(dist[e.to],e.to));
            }
        }
    }
}